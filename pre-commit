#!/bin/bash
#
# Licensed under 3-Clause BSD, see License.txt
#
# Copyright byte physics and contributors,  2013-2020
#
# A hook script to check that the to-be-commited files are valid
# filenames on a windows platform.
# Sources:
# - http://stackoverflow.com/a/62888
# - http://msdn.microsoft.com/en-us/library/aa365247.aspx
#
# To enable this hook, rename this file to "pre-commit", move it to ".git/hook" and make it executable.

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=
fi

enforcecompatiblefilenames=$(git config hooks.enforcecompatiblefilenames)

# Redirect output to stderr.
exec 1>&2

if test "$enforcecompatiblefilenames" != "true"
then
  exit 0
fi

git diff --cached --name-only --diff-filter=A -z $against | while IFS= read -r -d '' filename; do
  #https://stackoverflow.com/questions/10822790/can-i-call-a-function-of-a-shell-script-from-another-shell-script
  #source testIfWinValidFileName.sh
  #testIfWinValidFileName $filename
  testIfWinValidFileName.sh $filename
  testIfWinValidFileNameRslt=$?
  if [ $testIfWinValidFileNameRslt -gt 0 ]; then
  echo "Error: Attempt to add a file name which is incompatible to MS Windows file systems." 
    echo
    echo "If you know what you are doing you can disable this"
    echo "check using:"
    echo
    echo "git config hooks.enforcecompatiblefilenames false"
    echo
    exit 1
done

